'''
Half-Birthday Calculator
halfbday.py
by hcgatewood
'''

def create_translation_dict():
	months = [
			'January','February','March','April','May','June',
			'July','August','September','October','November','December']
	monthEndsList = [
			1, 32, 60, 91, 
			121, 152, 182, 213, 
			244, 274, 305, 335, 366]

	# {1:('January', 1), 2:('January', 2), 3:('January', 3), ...,
			# 32:('February', 1), ..., 365:('December', 31)}
	MDYT_day = {u:'' for u in range(1,366)}
	for day in MDYT_day:
		for u in range(12):
			if monthEndsList[u] <= day < monthEndsList[u+1]:
				MDYT_day[day] = (months[u],day-monthEndsList[u]+1)
	return MDYT_day


def input_MDT():
	months = [
			'January','February','March','April','May','June',
			'July','August','September','October','November','December']
	print('Input data concerning your birthday...')
	print('')

	bMonth,bDay,bYear,bTime = 0,0,0,0
	while \
			type(bMonth) is not int or \
			type(bDay) is not int or \
			type(bYear) is not int or \
			bMonth not in range(1,13) or \
			bDay not in range(1,31):
		MDY = input('Your birthday (in mm/dd form): ')
		bMonth = MDY[0:2]
		bDay = MDY[3:5]
		try:
			bMonth = int(bMonth)
			bDay = int(bDay)
		except:
			pass
	while bTime not in ['AM','PM']:
		bTime = input('Time of day (AM or PM): ')

	bMonth = months[bMonth-1]

	return (bMonth,bDay,bTime)

'''
Helper functions
'''
def print_MD(MD):
	print('')
	print('')
	print(
			'Your half birthday is ',
			MD[0], ' ', MD[1], '!', sep='')

def MD_to_day(MD):
	bMonth = MD[0]
	bDay = MD[1]
	MD_day = create_translation_dict()
	for day in range(1,366):
		if MD_day[day] == (bMonth,bDay):
			return day

def day_to_MD(day):
	MDYT_day = create_translation_dict()
	bMonthDay = MDYT_day[day]
	bMonth = bMonthDay[0]
	bDay = bMonthDay[1]
	return (bMonth,bDay)

def day_to_halfDay(day,bTime):
	if bTime == 'PM':
		day += 1
	halfDay = (day+182)%365
	return halfDay

def halfDay_to_day(halfDay,bTime):
	if bTime == 'PM':
		day -= 1
	day = (halfDay+182)%365
	return day


def run():
	MDT = input_MDT()
	day = MD_to_day((MDT[0],MDT[1]))
	halfDay = day_to_halfDay(day,MDT[2])
	halfMD = day_to_MD(halfDay)
	print_MD(halfMD)
